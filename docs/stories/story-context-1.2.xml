<story-context id="bmad/bmm/workflows/4-implementation/story-context/template" v="1.0">
  <metadata>
    <epicId>1</epicId>
    <storyId>2</storyId>
    <title>NATS→WS 网关最小链路</title>
    <status>Draft</status>
    <generatedAt>2025-10-20</generatedAt>
    <generator>BMAD Story Context Workflow</generator>
    <sourceStoryPath>docs/stories/story-1.2.md</sourceStoryPath>
  </metadata>

  <story>
    <asA>工程团队（Enabler，服务 Trader）</asA>
    <iWant>提供最小可用的 NATS→WebSocket 网关链路（连接 NATS 并将选定 subject 安全映射到浏览器 WS）</iWant>
    <soThat>浏览器能稳定消费标准化主题，为后续单连接扇出与可视化打下基础</soThat>
    <tasks>
      - 初始化 services/ws-gateway（Node 22 + TS）
      - 建立 NATS 连接（nats.js），订阅白名单 subject（最小权限）
      - WS 服务转发与基础背压防护
      - TLS 与 JWT/NKey 校验；主题级 ACL 限制到 xy.md.*
      - /metrics 与 /healthz；结构化错误码与日志
    </tasks>
  </story>

  <acceptanceCriteria>
    1) 连接 NATS 并将选定 subject 映射到 WS；启用 TLS 与 JWT/NKey 验证（最小权限）。
    2) 导出 ws_active、ws_msgs_rate、slow_consumers 等 Prometheus 指标（/metrics）。
    3) /healthz 返回就绪；错误与超时具备明确错误码与结构化日志。
  </acceptanceCriteria>

  <artifacts>
    <docs>
      - docs/epics.md (Epic 1 → Story 1.2)
      - docs/PRD.md#Requirements（FR003/FR011/FR013）
      - docs/solution-architecture.md#11-component-and-integration-overview（ws-gateway 组件）
      - docs/tech-spec-epic-1.md（网关职责与指标、权限约束）
    </docs>
    <code>
      - services/ws-gateway (planned)
      - packages/contracts (read-only, planned consumer)
    </code>
    <dependencies>
      - Node 22.11、ws 8.18.3、nats.js 2.28.2、prom-client 15.1.3、pino 9.9.4
    </dependencies>
  </artifacts>

  <constraints>
    - 仅通过网关做协议/鉴权转换；不做业务拼装
    - 主题前缀限制：xy.md.*；只读最小权限
  </constraints>
  <interfaces>
    - HTTP: GET /healthz, GET /metrics
    - WebSocket: /ws（鉴权后建立）
  </interfaces>
  <tests>
    <standards>单元（连接/重连/ACL/错误码）、集成（NATS↔WS 转发/指标抓取）、e2e（样例 subject 注入→浏览器消费）</standards>
    <locations>services/ws-gateway/test/*</locations>
    <ideas>
      - 断线重连与认证失败用例
      - 延迟与背压阈值占位测试
    </ideas>
  </tests>
</story-context>

