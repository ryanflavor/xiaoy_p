version: "3.9"

services:
  nats:
    image: nats:2.10-alpine
    command: ["-js", "-DV"]
    # No host port mapping required; internal network only to avoid conflicts

  gateway:
    image: node:22-alpine
    working_dir: /app/services/ws-gateway
    volumes:
      - .:/app
    environment:
      PORT: "8080"
      HOST: "0.0.0.0"
      NATS_URLS: nats://nats:4222
      WS_SUBJECT_WHITELIST: "xy.md.>"
      ALLOWED_ORIGINS: "*"
      # Dev optimization: disable JWT enforcement to unblock feature work
      JWT_OPTIONAL: "1"
      # Small clock tolerance if tokens are provided (optional)
      JWT_CLOCK_TOLERANCE_SEC: "30"
      JWT_PUBLIC_KEY: /app/.demo_pub.pem
      LOG_LEVEL: info
    command: sh -lc "npm i && npm run dev"
    depends_on:
      - nats
    ports:
      - "8080:8080"

  aggregator:
    image: golang:1.22-alpine
    working_dir: /app/services/aggregator-go
    volumes:
      - .:/app
    environment:
      AGG_HOST: 0.0.0.0
      AGG_PORT: "8090"
    command: sh -lc "go run ."
    ports:
      - "8090:8090"

  ui:
    image: node:22-alpine
    working_dir: /app/apps/ui
    volumes:
      - .:/app
    environment:
      PORT: "5174"
    command: ["node", "demo/server.mjs"]
    ports:
      - "5174:5174"
    depends_on:
      - gateway

  # Simple loop publisher for demo data on xy.md.tick.demo
  publisher:
    image: node:22-alpine
    working_dir: /app/services/ws-gateway
    volumes:
      - .:/app
    environment:
      NATS_URL: nats://nats:4222
      SUBJECT: xy.md.tick.demo
      INTERVAL_MS: "1"
    entrypoint: ["sh", "-lc"]
    command: |
      "npm i >/dev/null 2>&1 || true; \
       NATS_URL=$$NATS_URL SUBJECT=$$SUBJECT INTERVAL_MS=$$INTERVAL_MS node examples/publish-interval.mjs"
    depends_on:
      - nats
    # Enabled by default for a live data stream in dev

  # One-off WebSocket client used by smoke to trigger forwarding metrics
  wsclient:
    image: node:22-alpine
    working_dir: /app/services/ws-gateway
    volumes:
      - .:/app
    environment:
      WS_URL: ws://gateway:8080/ws
      SUBJECTS: xy.md.tick.demo
      TOKEN: "$(cat /app/.demo_token.txt || true)"
    entrypoint: ["sh", "-lc"]
    command: |
      "npm i >/dev/null 2>&1 || true; \
       : $${TOKEN:=$$(cat /app/.demo_token.txt)}; \
       TOKEN=$$TOKEN WS_URL=$$WS_URL SUBJECTS=$$SUBJECTS node examples/ws-client.mjs"
    depends_on:
      - gateway
      - nats
    profiles: ["test"]

  prometheus:
    image: prom/prometheus:v2.54.1
    command: ["--config.file=/etc/prometheus/prometheus.yml"]
    volumes:
      - ./infra/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    depends_on:
      - gateway
      - aggregator
    profiles: ["observe"]

networks:
  default:
    name: xiaoy-demo
