name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - name: Enable Corepack (pnpm)
        run: |
          corepack enable
          corepack prepare pnpm@9.12.2 --activate

      - name: Install root deps (pnpm)
        run: pnpm install --frozen-lockfile

      - name: Lint (ESLint)
        run: pnpm run lint:eslint

      - name: ws-gateway deps (npm ci)
        working-directory: services/ws-gateway
        run: npm ci

      - name: ws-gateway typecheck
        working-directory: services/ws-gateway
        run: npx tsc -p tsconfig.json --noEmit

      - name: ws-gateway tests (vitest)
        working-directory: services/ws-gateway
        run: npx vitest run --reporter=verbose

      - name: UI tests (node --test)
        run: node --test apps/ui/test/overlay.test.mjs

      - name: Setup Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: pycore tests (pytest + coverage)
        run: |
          python -V
          python -m pip install --upgrade pip
          python -m pip install -r packages/pycore/requirements-dev.txt || true
          python -m pip install pytest pytest-cov
          python -m pip install -e packages/pycore
          pytest -q packages/pycore --cov=packages/pycore/src/pycore --cov-report=xml --cov-report=term --cov-fail-under=80

      - name: Upload pycore coverage
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: pycore-coverage-xml
          path: coverage.xml

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'

      - name: aggregator-go tests
        working-directory: services/aggregator-go
        run: go test -run TestHealthzEndpoint -v ./...
