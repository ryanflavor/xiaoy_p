name: CI E2E (Compose Demo)

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  demo-e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - name: Enable Corepack (pnpm)
        run: |
          corepack enable
          corepack prepare pnpm@9.12.2 --activate

      - name: Install root deps (pnpm)
        run: pnpm install

      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps

      - name: Start Compose demo (core services)
        run: |
          docker compose -f compose.demo.yml up -d --quiet-pull nats gateway aggregator ui

      - name: Wait for health
        run: |
          for i in $(seq 1 50); do \
            curl -fsS http://localhost:8080/healthz | grep -q '"natsConnected":true' && break || true; \
            sleep 0.3; \
          done

      - name: Start demo publisher (background)
        run: docker compose -f compose.demo.yml --profile demo up -d publisher

      - name: Run Playwright (demo-compose)
        run: pnpm run test:e2e -- apps/ui/e2e/demo-compose.spec.ts

      - name: Archive Playwright artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report

      - name: Collect compose logs
        if: always()
        run: |
          docker compose -f compose.demo.yml logs --no-color > compose-logs.txt || true
          test -f /tmp/ws-gateway-e2e.log && cp /tmp/ws-gateway-e2e.log ws-gateway-e2e.log || true

      - name: Upload compose logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: demo-compose-logs
          path: |
            compose-logs.txt
            ws-gateway-e2e.log

      - name: Teardown
        if: always()
        run: docker compose -f compose.demo.yml down -v
